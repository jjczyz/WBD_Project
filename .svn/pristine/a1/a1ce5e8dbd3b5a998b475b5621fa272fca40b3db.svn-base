package osmpackage;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
public class PatientForm extends JPanel implements ActionListener {
	

	private static final long serialVersionUID = 1L;
	private JButton saveButton, cancelButton;
	private static JTextField nameField;
	private JTextField surnameField;
	private JTextField peselField;
	private JLabel nameLabel, surnameLabel, peselLabel, sexLabel, insuranceLabel;
	private JRadioButton maleButton, femaleButton;
	private ButtonGroup sexButtons;
	private JComboBox<?> insuranceBox;
	private String[] insuranceStrings = {"NFZ","Prywatnie","Brak"};
	   
	PatientForm()
	{
		saveButton = new JButton("Zapisz");
		saveButton.addActionListener( this);
		cancelButton = new JButton("Anuluj");
		cancelButton.addActionListener( this);
		       
        nameField = new JTextField("(imiê)");
        surnameField = new JTextField("(nazwisko)");
        peselField = new JTextField("(PESEL)");

        nameLabel = new JLabel("Imiê:");
        surnameLabel = new JLabel("Nazwisko:");
        peselLabel = new JLabel("PESEL:");
        sexLabel = new JLabel("P³eæ:");
        insuranceLabel = new JLabel("Ubezpieczenie:");
            
        femaleButton = new JRadioButton("kobieta");
        femaleButton.setActionCommand("K");

        maleButton = new JRadioButton("mê¿czyzna");
        maleButton.setActionCommand("M");
        sexButtons = new ButtonGroup();
        sexButtons.add(femaleButton);
        sexButtons.add(maleButton);
        femaleButton.setSelected(true);

        insuranceBox = new JComboBox<Object>(insuranceStrings);
       
        setLayout(new GridBagLayout());
        GridBagConstraints c = new GridBagConstraints();
        c.fill = GridBagConstraints.HORIZONTAL;
        c.insets = new Insets(5,5,5,5);
        c.weightx = 0.5;
        c.weighty = 0.5;
        c.gridx = 0;
        c.gridy = 0;
        add(nameLabel, c);
        c.gridx = 1;
        c.gridy = 0;
        c.gridwidth = 2;
        add(nameField, c);
        c.gridx = 0;
        c.gridy = 1;
        c.gridwidth = 1;
        add(surnameLabel, c);
        c.gridx = 1;
        c.gridy = 1;
        c.gridwidth = 2;
        add(surnameField, c);
        c.gridx = 0;
        c.gridy = 2;
        c.gridwidth = 1;
        add(peselLabel, c);
        c.gridx = 1;
        c.gridy = 2;
        c.gridwidth = 2;
        add(peselField, c);
        c.gridx = 0;
        c.gridy = 3;
        c.gridwidth = 1;
        add(sexLabel, c);
        c.gridx = 1;
        c.gridy = 3;
        add(femaleButton, c);
        c.gridx = 2;
        c.gridy = 3;
        add(maleButton, c);
        c.gridx = 0;
        c.gridy = 4;
        add(insuranceLabel, c);
        c.gridx = 1;
        c.gridy = 4;
        c.gridwidth = 2;
        add(insuranceBox, c);
        c.gridx = 0;
        c.gridy = 5;
        c.gridwidth = 1;
        add(saveButton, c);
        c.gridx = 1;
        c.gridy = 5;
        add(cancelButton, c);
       
        setBorder(BorderFactory.createTitledBorder("Dane pacjenta"));
        Utility.setPanelEnabled(this, false);
    
	}
	
	public void setFields(Patient patient)
	{
		nameField.setText(patient.getPatientName());
		surnameField.setText(patient.getPatientSurname());
		peselField.setText(patient.getPatientPESEL());
		
		String sex = patient.getPatientSex();
		if (sex.equals("M")) maleButton.setSelected(true);
		else femaleButton.setSelected(true);
		
		String insurance = patient.getPatientInsurance();
		if (insurance.equals("NFZ"))insuranceBox.setSelectedIndex(0);
		if (insurance.equals("Prywatnie"))insuranceBox.setSelectedIndex(1);
		if (insurance.equals("Brak"))insuranceBox.setSelectedIndex(2);
	}

	public void actionPerformed(ActionEvent event) {
		if (event.getSource() == saveButton)
		{
			if(Utility.isAlpha(nameField.getText()))
			{
				if(Utility.isAlpha(surnameField.getText()))
				{
						String name = nameField.getText();			
						String surname = surnameField.getText();
						String sex = sexButtons.getSelection().getActionCommand();
						String insurance = (String)insuranceBox.getSelectedItem();
						if(checkPesel(peselField.getText())) 
						{
							PatientExamination patExam = MainWindow.getInstance().getPatExam();
							String pesel = peselField.getText();
							PatientsList patList = new PatientsList();
							patList.addPatient(name, surname, pesel, sex, insurance);
							nameField.setText("");
							surnameField.setText("");
							peselField.setText("");
							femaleButton.setSelected(true);
							insuranceBox.setSelectedIndex(0); 
							Utility.setPanelEnabled(this,false);
							Utility.setPanelEnabled(patExam,false);
						}				
				}
				else JOptionPane.showMessageDialog(null,"Proszê wpisaæ poprawne nazwisko");
			}
		    else JOptionPane.showMessageDialog(null,"Proszê wpisaæ poprawne imiê");
		}
		if (event.getSource() == cancelButton)
		{
			PatientExamination patExam = MainWindow.getInstance().getPatExam();
			PatientsTable PatientsTable = MainWindow.getInstance().getPatTable();
			PatientsTable.removeTableSelection();
			
			femaleButton.setSelected(true);
			insuranceBox.setSelectedIndex(0); 
		
			Utility.setPanelEnabled(this,false);
			Utility.setPanelEnabled(patExam,false);
		}
	}
	public boolean checkPesel(String string) {
		
		if(!Utility.isDigit(string) || !Utility.checkLength(string, 1)){ 
			
			JOptionPane.showMessageDialog(null,"Proszê wpisaæ poprawny PESEL");
			return false;
		}
		
		PatientsList patList = new PatientsList();
		ArrayList<Patient> list = patList.getPatientsList();
		for(int i=0; i < list.size(); i++)
		{
			Patient patient = list.get(i);
		    if(string.equals(patient.getPatientPESEL()))
		    {
		    	if(patList.getCurrentPatientId() == i)
		    	{
		    		return true;
		    	}
		    	else JOptionPane.showMessageDialog(null,"Ten pacjent ju¿ jest w bazie");
		    	return false;
		    }   	
		}
		return true;
	}
}
